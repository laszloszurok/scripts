#!/usr/bin/env bash

# Turns off the screen and suspends the system after inactivity on the tty

get_bat_device() {
    if [ -f /sys/class/power_supply/BAT0/status ]; then
        bat_dev="/sys/class/power_supply/BAT0/status"
    elif [ -f /sys/class/power_supply/BAT1/status ]; then
        bat_dev="/sys/class/power_supply/BAT1/status"
    else
        bat_dev="undefined"
    fi
}

get_bat_state() {
    if [ "$bat_dev" != "undefined" ]; then
        bat_state=$(cat "$bat_dev")
    else
        bat_state="undefined"
    fi
}

set_wait_time() {
    [ "$bat_state" = "Discharging" ] && time_to_wait=600 || time_to_wait=900
}

get_mon_state() {
    mon_state=$(setterm --term linux --blank < /dev/console)
}

if ! pgrep X > /dev/null 2>&1 ; then # if the X server is not running
    setterm --term linux --blank 1 > /dev/console # blank the screen after 5 minutes
    get_bat_device
    
    while true; do
        get_mon_state
        if ! pgrep X > /dev/null 2>&1 ; then
            if [ "$mon_state" != "0" ]; then
                get_bat_state
                set_wait_time

                num="0"
                while [ "$num" -lt "$time_to_wait" ] && [ "$mon_state" != "0" ]; do
                    num=$((num+1))
                    get_mon_state
                    sleep 1
                done
            fi
        else
            printf "X server is running, exiting main loop.\n"
            exit 1
        fi
        get_mon_state
        if [ "$mon_state" != "0" ]; then
            [ -z "$(pidof pacman)" ] && \
            [ -z "$(pidof paru)" ] && \
            [ -z "$(pidof cp)" ] && \
            [ -z "$(pidof mv)" ] && \
            systemctl suspend 
        fi
        sleep 30
    done
else
    printf "Cannot use setterm: the X server is running.\n"
    exit 1
fi
