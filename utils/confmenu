#!/usr/bin/env bash

config_paths=(
    "$HOME/.config" 
    "$HOME/.local/share" 
    "$HOME/source/dwm"
    "$HOME/source/dwmblocks"
    "$HOME/source/dmenu"
    "$HOME/source/st"
    "$HOME/source/slock"
    "$HOME/source/scripts"
)

# cache files
cache_dir="${XDG_CACHE_HOME:-$HOME/.cache}/confmenu"
recent_cache="$cache_dir/recent"
all_cache="$cache_dir/all"

mkdir -p "$cache_dir"

# dmenu settings
prompt="ÔÅÑ edit:"
dmenu_cmd="dmenu -lh 26 -l 20 -c -i $@"

update_cache() {
    sed -i "\|$1|d" "$recent_cache"
    echo -e "$1\n$(< "$recent_cache")" > "$recent_cache"
}

# get the contents of the config folders and create recent_cache if it does not exist
config_list=$(find "${config_paths[@]}" -type f -maxdepth 2 -not -path '*/\.git/*')
[ ! -f "$recent_cache" ] && echo "$config_list" > "$recent_cache"

# always write the full list to all_cache, so the list will be always up to date
echo "$config_list" > "$all_cache"

# remove anything from recent_cache that is not present in all_cache
for line in $(grep -vxf "$all_cache" "$recent_cache"); do
    sed -i "\|$line|d" "$recent_cache"
done

# merge $recent_cache and $all_cache, remove duplicates
list=$(awk '!visited[$0]++' "$recent_cache" "$all_cache")

# replace $HOME with ~ for every list item
list=$(echo "$list" | sed "s\\$HOME\~\g")

# pipe the list items into dmenu
item=$(printf '%s\n' "${list[@]}" | $dmenu_cmd -p "$prompt")

# exit if the user did not pick an item
[[ -n $item ]] || exit

# undo the replacement for the picked item (otherwise won't open correctly)
item=$(echo "$item" | sed "s\~\\$HOME\g")

update_cache "$item"

# determine on which path the picked item is and open it in $EDITOR
$TERMINAL $EDITOR "$item"
