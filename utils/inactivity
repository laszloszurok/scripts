#!/bin/sh

# This script uses the output of the xset command to determine if the screen is turned off.
# If it is, it starts xautolock, then it waits for the given time (based on the battery status)
# and then checks the state of the monitor again. If the screen is still off after the wait time,
# no audio is playing and specific programs are not running, the system will be suspended with 
# systemctl.

get_bat_device() {
    if [ -f /sys/class/power_supply/BAT0/status ]; then
        bat_dev="/sys/class/power_supply/BAT0/status"
    elif [ -f /sys/class/power_supply/BAT1/status ]; then
        bat_dev="/sys/class/power_supply/BAT1/status"
    else
        bat_dev="undefined"
    fi
}

get_bat_state() {
    if [ "$bat_dev" != "undefined" ]; then
        bat_state=$(cat "$bat_dev")
    else
        bat_state="undefined"
    fi
}

set_wait_time() {
    [ "$bat_state" = "Discharging" ] && time_to_wait=600 || time_to_wait=900
}

get_mon_state() {
    mon_state=$(xset q | grep "Monitor is")
}

get_audio_device() {
    if [ -f /proc/asound/card0/pcm0p/sub0/status ]; then
        audio_dev="/proc/asound/card0/pcm0p/sub0/status"
    elif [ -f  /proc/asound/card1/pcm0p/sub0/status ]; then
        audio_dev="/proc/asound/card1/pcm0p/sub0/status"
    else
        audio_dev="undefined"
    fi
}

get_audio_state() {
    if [ "$audio_dev" != "undefined" ]; then
        audio_state=$(head -1 < "$audio_dev" | awk '{print $NF}')
    else
        audio_state="undefined"
    fi
}

check_qutebrowser() {
    dpms_state=$(xset q | grep "DPMS is")

    if pactl list sink-inputs | grep "qutebrowser" > /dev/null; then
        if [ "$dpms_state" = "  DPMS is Enabled" ]; then
            xset -dpms
        fi
    else
        if [ "$dpms_state" = "  DPMS is Disabled" ]; then
            xset +dpms
        fi
    fi
}

get_bat_device
get_audio_device

xset s off # disable screensaver
xset dpms 300 300 300 # monitor switches off after 300 seconds

while true; do
    check_qutebrowser
    get_mon_state

    if [ "$mon_state" = "  Monitor is Off" ]; then
        xautolock -time 5 -locker slock &

        get_bat_state
        set_wait_time

        num="0"
        while [ $num -lt $time_to_wait ] && [ "$mon_state" = "  Monitor is Off" ]; do
            num=$((num+1))
            get_mon_state
            sleep 1
        done

        get_mon_state
        get_audio_state

        [ "$mon_state" = "  Monitor is Off" ] && [ "$audio_state" != "RUNNING"  ] && \
            [ -z "$(pidof pacman)" ] && \
            [ -z "$(pidof paru)" ] && \
            [ -z "$(pidof makepkg)" ] && \
            [ -z "$(pidof qbittorrent)" ] && \
            [ -z "$(pidof cp)" ] && \
            [ -z "$(pidof mv)" ] && \
            [ -z "$(pidof cat)" ] && \
            systemctl suspend
    else
        killall xautolock 2>/dev/null
    fi
    sleep 30
done
