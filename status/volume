#!/bin/sh

# This script uses pactl to get the volume level and display it in
# the form of a notification and display an appropriate icon in the 
# status bar.

case $BUTTON in
    1) pactl set-sink-mute @DEFAULT_SINK@ toggle ;;
esac

sinkinfo="$(pactl list sinks | grep 'Name\|Mute\|Volume:')"

echo "$sinkinfo" | grep "Mute: yes" > /dev/null && speaker_state="muted"

if [ "$speaker_state" == "muted" ]; then
    icon=""
    dunstify --appname="volume" --replace=8 "Sound muted"
else
    vol=$(echo "$sinkinfo" | grep "front-left" | awk 'NR ==1 { print $5 }' | tr -d "%")

    if [ "$vol" -gt "100" ]; then
        # Don't let the volume level exceed 100% (Use pactl list sinks to get sink names)
        pactl set-sink-volume @DEFAULT_SINK@ 100%
        vol=100;
        icon=""
    elif [ "$vol" -gt "70" ]; then
        icon=""
    elif [ "$vol" -lt "30" ]; then
        icon=""
    else
        icon=""
    fi

    dunstify --appname="volume" --replace=8 "Volume $vol%"
fi

printf "%s\\n" "$icon"
