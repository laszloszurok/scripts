#!/bin/sh

# This script uses pactl to get the volume level, then shows it in
# a notification and displays an appropriate icon in the status bar.
# Use 'pactl list sinks' to get sink names.

case $BUTTON in
    1) pactl set-sink-mute @DEFAULT_SINK@ toggle ;;
    3) setsid -f $TERMINAL pulsemixer ;;
    4) pactl set-sink-volume @DEFAULT_SINK@ +5%; ;;
    5) pactl set-sink-volume @DEFAULT_SINK@ -5%; ;;
esac

notify() {
    dunstify --appname="volume" --replace=1 "$1" "$2"
}

sinkinfo="$(pactl list sinks | grep 'Name\|Mute\|Volume:')"

printf "%s\n" "$sinkinfo" | grep "Mute: yes" > /dev/null && speaker_state="muted"

vol=$(printf "%s\n" "$sinkinfo" | grep "front-left" | awk 'NR ==1 { print $5 }' | tr -d "%")

if [ "$speaker_state" = "muted" ]; then
    icon=""
    notify "Volume $vol% (muted)"
else
    if [ "$vol" -gt "100" ]; then
        # Don't let the volume level exceed 100%
        pactl set-sink-volume @DEFAULT_SINK@ 100%
        vol=100;
        icon=""
    elif [ "$vol" -gt "70" ]; then
        icon=""
    elif [ "$vol" -lt "30" ]; then
        icon=""
    else
        icon=""
    fi

    notify "Volume $vol%"
fi

printf "%s\n" "$icon"
